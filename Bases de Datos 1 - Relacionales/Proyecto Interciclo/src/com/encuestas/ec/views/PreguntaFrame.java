/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.encuestas.ec.views;

import com.encuestas.ec.bo.ObjectBo;
import com.encuestas.ec.dao.ObjectDao;
import com.encuestas.ec.entity.Encuesta;
import com.encuestas.ec.entity.Pregunta;
import com.encuestas.ec.entity.RespuestaTexto;
import com.encuestas.ec.entity.Opciones;
import com.encuestas.ec.entity.Usuario;
import java.awt.Point;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Freddie
 */
public class PreguntaFrame extends javax.swing.JFrame {

    Encuesta encuesta = new Encuesta();
    Pregunta pregunta = new Pregunta();
    RespuestaTexto respuesta = new RespuestaTexto();
    Opciones opciones = new Opciones();
    Usuario usuario = new Usuario();
    ObjectBo obo = new ObjectBo();
    ObjectDao objeto = new ObjectDao();

    public PreguntaFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        obo.deshabilitarCambiosObjeto();
//        if(rbtnTexto.isSelected())
//            btnAceptarFinal.setEnabled(false);
    }

    public PreguntaFrame(Encuesta objeto) {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        int idEncuesta = objeto.getIDENCUESTA();
        lblNombreEncuesta.setText(objeto.getNOMBRE());
        lblDescripcionEncuesta.setText(objeto.getDESCRIPCION());
        lblIdE.setText(String.valueOf(objeto.getIDENCUESTA()));
        /*   */
        String[] tableO = {"IDSELECCION", "NOMBREOPCION"};
        String[] labelsTablas = {"IDPREGUNTA", "IDENCUESTA"};
        String[] labelsPregunta = {"IDENCUESTA"};
        Object[] idPreguntaW = {Integer.parseInt(lblIdE.getText())};
        int[] tdPW = {1};
        int IDPregunta = obo.getMaxIDFK(pregunta, labelsPregunta, idPreguntaW, tdPW);
        IDPregunta = IDPregunta + 1;
        /*   */
        lblIdPregunta.setText(String.valueOf(IDPregunta));
        Object[] lblsTablas = {obo.getMaxID(pregunta), Integer.parseInt(lblIdE.getText())};
        int[] dataty = {1, 1};
        try {
            obo.listarObjeto(tblOpciones, opciones, tableO, labelsTablas, lblsTablas, dataty);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnGroupTipoRespuesta = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtNombrePregunta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPreguntas = new javax.swing.JTable();
        rbtnTexto = new javax.swing.JRadioButton();
        rbtnOpcion = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOpciones = new javax.swing.JTable();
        btnAgregarOpcion = new javax.swing.JButton();
        btnAceptarFinal = new javax.swing.JButton();
        txtNombreOpcion = new javax.swing.JTextField();
        btnEditarOpcion = new javax.swing.JButton();
        btnEliminarOpcion = new javax.swing.JButton();
        btnAgregarPregunta = new javax.swing.JButton();
        btnEliminarPregunta = new javax.swing.JButton();
        lblNombreEncuesta = new javax.swing.JLabel();
        lblDescripcionEncuesta = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        cbxTipoSeleccion = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnRegresarEncuesta = new javax.swing.JButton();
        lblIdE = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        lblIdPregunta = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombrePregunta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        jPanel1.add(txtNombrePregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 510, 30));

        tblPreguntas.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        tblPreguntas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pregunta", "Tipo", "Color"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPreguntas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 502, 223));

        btnGroupTipoRespuesta.add(rbtnTexto);
        rbtnTexto.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        rbtnTexto.setText("Respuesta Texto");
        jPanel1.add(rbtnTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, -1));

        btnGroupTipoRespuesta.add(rbtnOpcion);
        rbtnOpcion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        rbtnOpcion.setText("Respuesta Opcion Multiple");
        jPanel1.add(rbtnOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, -1, -1));

        tblOpciones.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        tblOpciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdOpcion", "Seleccion", "Opcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOpciones);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 230, 73));

        btnAgregarOpcion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnAgregarOpcion.setText("Agregar");
        btnAgregarOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarOpcionActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 80, -1));

        btnAceptarFinal.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnAceptarFinal.setText("Aceptar");
        btnAceptarFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarFinalActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptarFinal, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 630, -1, -1));

        txtNombreOpcion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        jPanel1.add(txtNombreOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 240, -1));

        btnEditarOpcion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnEditarOpcion.setText("Editar");
        btnEditarOpcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarOpcionMouseClicked(evt);
            }
        });
        jPanel1.add(btnEditarOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 80, -1));

        btnEliminarOpcion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnEliminarOpcion.setText("Eliminar");
        btnEliminarOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarOpcionActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarOpcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 80, -1));

        btnAgregarPregunta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnAgregarPregunta.setText("Agregar");
        btnAgregarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPreguntaActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 520, 30));

        btnEliminarPregunta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnEliminarPregunta.setText("Eliminar");
        btnEliminarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPreguntaActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 470, -1, -1));

        lblNombreEncuesta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        lblNombreEncuesta.setText("Nombre de la Encuesta");
        jPanel1.add(lblNombreEncuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        lblDescripcionEncuesta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        lblDescripcionEncuesta.setText("Descripcion de la Encuesta");
        jPanel1.add(lblDescripcionEncuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, -1, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 530, 20));

        cbxTipoSeleccion.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        cbxTipoSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unica", " ", " " }));
        jPanel1.add(cbxTipoSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 210, 140, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        jLabel3.setText("Tipo de Seleccion:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 210, 160, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        jLabel4.setText("Respuesta en Formato Texto ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        btnRegresarEncuesta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnRegresarEncuesta.setText("Regresar Encuesta");
        btnRegresarEncuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarEncuestaActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresarEncuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 630, -1, -1));

        lblIdE.setBackground(new java.awt.Color(214, 217, 223));
        lblIdE.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        lblIdE.setForeground(new java.awt.Color(214, 217, 223));
        lblIdE.setText("id");
        jPanel1.add(lblIdE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 260, -1, -1));

        lblIdPregunta.setBackground(new java.awt.Color(214, 217, 223));
        lblIdPregunta.setFont(new java.awt.Font("Helvetica World", 0, 11)); // NOI18N
        lblIdPregunta.setForeground(new java.awt.Color(214, 217, 223));
        lblIdPregunta.setText("IDPREGUNTA");
        jPanel1.add(lblIdPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarOpcionActionPerformed
        String[] tableO = {"IDOPCION", "IDSELECCION", "NOMBREOPCION"};
        String[] labelsTablas = {"IDPREGUNTA", "IDENCUESTA"};
        String[] labelsPregunta = {"IDENCUESTA"};
        Object[] idPreguntaW = {Integer.parseInt(lblIdE.getText())};
        int[] tdPW = {1};
        int IDPregunta = obo.getMaxIDFK(pregunta, labelsPregunta, idPreguntaW, tdPW);
        IDPregunta = IDPregunta + 1;
        Object[] lblsTablas = {IDPregunta, Integer.parseInt(lblIdE.getText())};
        int[] dataty = {1, 1, 1};

        if (txtNombreOpcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene el campo nombre Opcion");
        } else {
            int opcionTO = cbxTipoSeleccion.getSelectedIndex() + 1;
            int idEnc = Integer.parseInt(lblIdE.getText().toString());
            int idPreg = Integer.parseInt(lblIdPregunta.getText());//obo.getMaxID(pregunta);//pregunta.getIDPREGUNTA();
            int idOpc = obo.getMaxID(opciones);
            String nombreOpcion = txtNombreOpcion.getText();

            Opciones topcion = new Opciones(idOpc, IDPregunta, idEnc, opcionTO, nombreOpcion);
            obo.agregarObjeto(topcion);
            try {
                obo.listarObjeto(tblOpciones, opciones, tableO, labelsTablas, lblsTablas, dataty);
            } catch (SQLException ex) {
                Logger.getLogger(PreguntaFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtNombreOpcion.setText("");
        }
    }//GEN-LAST:event_btnAgregarOpcionActionPerformed

    private void btnAgregarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPreguntaActionPerformed
        if (txtNombrePregunta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene el campo Pregunta");
        } else {
            String pregunt = txtNombrePregunta.getText();
            int tipoResp;//1 text 2 omultiple
            if (rbtnOpcion.isSelected()) {
                tipoResp = 2;
            } else {
                tipoResp = 1;
            }
            String[] labelsFK = {"IDENCUESTA"};
            Object[] idEncuestaW = {Integer.parseInt(lblIdE.getText())};
            int[] tdPW = {1};
            int IDPregunta = obo.getMaxIDFK(pregunta, labelsFK, idEncuestaW, tdPW);
            IDPregunta = IDPregunta + 1;
            lblIdPregunta.setText(String.valueOf(IDPregunta + 1));
            pregunta.setPREGUNTA(pregunt);
            pregunta.setIDPREGUNTA(IDPregunta);//obo.getMaxID(pregunta)
            pregunta.setIDENCUESTA(Integer.parseInt(lblIdE.getText()));
            pregunta.setIDTIPORESPUESTA(tipoResp);
            String mensaje = obo.agregarObjeto(pregunta);
            txtNombreOpcion.setText("");
            txtNombrePregunta.setText("");
            btnGroupTipoRespuesta.clearSelection();
            reiniciarJTable(tblOpciones);

            ////
            String[] tableO = {"IDPREGUNTA", "PREGUNTA"};
            String[] tableO2 = {"IDENCUESTA", "IDPREGUNTA"};
            Object[] lblsTablas = {Integer.parseInt(lblIdE.getText())};
            int[] dataty = {1};
            try {
                obo.listarObjetoFK(tblPreguntas, pregunta, tableO, tableO2, lblsTablas, dataty);
                /*table.setEnabled(false);
                tblPreguntas.setCellSelectionEnabled(true);*/
            } catch (Exception e) {
                System.out.println(e);
            }
            ////
        }
    }//GEN-LAST:event_btnAgregarPreguntaActionPerformed
    public static void reiniciarJTable(javax.swing.JTable Tabla) {
        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

        TableColumnModel modCol = Tabla.getColumnModel();
        while (modCol.getColumnCount() > 0) {
            modCol.removeColumn(modCol.getColumn(0));
        }
    }
    private void btnRegresarEncuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarEncuestaActionPerformed
        EncuestaFrame eframe = new EncuestaFrame(Integer.parseInt(lblIdE.getText()), lblNombreEncuesta.getText(), lblDescripcionEncuesta.getText());
        eframe.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnRegresarEncuestaActionPerformed

    private void btnAceptarFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarFinalActionPerformed
        obo.confirmarCambiosObjeto();
        this.setVisible(false);
        JOptionPane.showMessageDialog(null, "Encuesta Registrada Exitosamente");
        Inicio in = new Inicio();
        in.setVisible(true);
    }//GEN-LAST:event_btnAceptarFinalActionPerformed

    private void btnEditarOpcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarOpcionMouseClicked
        //Point P= evt.getPoint();
        //int selection = tblOpciones.rowAtPoint(P);
        int column = 0;
        int row = tblOpciones.getSelectedRow();
        String selection = tblOpciones.getModel().getValueAt(row, column).toString();
        try {
            // System.out.println(selection + "+" + tblOpciones.getValueAt(selection, 0) + "   " + tblOpciones.getValueAt(selection, 1));
            txtNombreOpcion.setText(tblOpciones.getValueAt(row, 2) + "");
            int valorIndice = Integer.parseInt(tblOpciones.getValueAt(row, 0).toString());
            cbxTipoSeleccion.setSelectedIndex(valorIndice - 1);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnEditarOpcionMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int column = 0;
        int row = tblOpciones.getSelectedRow();
        String selection = tblOpciones.getModel().getValueAt(row, column).toString();
        if (txtNombreOpcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Llene todos los campos");
        } else {
            String[] tableO = {"IDOPCION", "IDSELECCION", "NOMBREOPCION"};
            String[] labelsTablas = {"IDPREGUNTA", "IDENCUESTA"};
            String[] labelsPregunta = {"IDENCUESTA"};
            Object[] idPreguntaW = {Integer.parseInt(lblIdE.getText())};
            int[] tdPW = {1, 1, 1};
            System.out.println("$$" + idPreguntaW[0]);
            //##SELECT MAX(IDPREGUNTA) FROM PREGUNTA WHERE (IDENCUESTA = 8) //labelsPregunta despues del select y idPreguntaW es el numero de encuesta idPreguntaW es de los id despues del where  y tdPW es de los tipos de datos de las preguntas despues del where
            int IDPregunta = obo.getMaxIDFK(pregunta, labelsPregunta, idPreguntaW, tdPW);
            IDPregunta = IDPregunta + 1;
            Object[] lblsTablas = {IDPregunta, Integer.parseInt(lblIdE.getText())};
            int[] dataty = {1, 1};
            if (txtNombreOpcion.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Llene el campo nombre Opcion");
            } else {
                int opcionTO = cbxTipoSeleccion.getSelectedIndex() + 1;
                int idEnc = Integer.parseInt(lblIdE.getText());
                //int idPreg = obo.getMaxIDFK(pregunta, labelsPregunta, idPreguntaW, tdPW);
                IDPregunta = Integer.parseInt(lblIdPregunta.getText());
                int idOpc = Integer.parseInt(tblOpciones.getValueAt(row, 0).toString());//obo.getMaxID(opciones);
                String nombreOpcion = txtNombreOpcion.getText();
                System.out.println(idOpc + IDPregunta + idEnc + opcionTO + nombreOpcion + "}}}");
                Opciones topcion = new Opciones(idOpc, IDPregunta, idEnc, opcionTO, nombreOpcion);
                topcion.toString();
                String mensaje = obo.modificarObjeto(topcion);
                reiniciarJTable(tblOpciones);
                try {
                    obo.listarObjeto(tblOpciones, opciones, tableO, labelsTablas, lblsTablas, dataty);
                } catch (SQLException ex) {
                    Logger.getLogger(PreguntaFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                txtNombreOpcion.setText("");
                JOptionPane.showMessageDialog(null, mensaje);
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarOpcionActionPerformed
        int column = 0;
        int row = tblOpciones.getSelectedRow();
        String selection = tblOpciones.getModel().getValueAt(row, column).toString();//tblOpciones.getModel().getValueAt(row, column)[0]
        System.out.println(selection);
        String mensaje = obo.eliminarObjeto(opciones, selection, 0);
        reiniciarJTable(tblOpciones);
        ////
        String[] tableO = {"IDOPCION", "IDSELECCION", "NOMBREOPCION"};
        String[] labelsTablas = {"IDPREGUNTA", "IDENCUESTA"};
        String[] labelsPregunta = {"IDENCUESTA"};
        Object[] idPreguntaW = {Integer.parseInt(lblIdE.getText())};
        int[] tdPW = {1, 1, 1};
        int IDPregunta = obo.getMaxIDFK(pregunta, labelsPregunta, idPreguntaW, tdPW);
        IDPregunta = IDPregunta + 1;
        Object[] lblsTablas = {IDPregunta, Integer.parseInt(lblIdE.getText())};
        int[] dataty = {1, 1};
        try {
            obo.listarObjeto(tblOpciones, opciones, tableO, labelsTablas, lblsTablas, dataty);
        } catch (SQLException ex) {
            Logger.getLogger(PreguntaFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarOpcionActionPerformed

    private void btnEliminarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPreguntaActionPerformed
        int column = 0;
        int row = tblPreguntas.getSelectedRow();
        String selection = tblPreguntas.getModel().getValueAt(row, column).toString();//tblOpciones.getModel().getValueAt(row, column)[0]
        System.out.println(selection);
        String mensaje = obo.eliminarObjeto(pregunta, selection, 0);
        reiniciarJTable(tblPreguntas);
        reiniciarJTable(tblOpciones);
        //////
        String[] tableO = {"IDPREGUNTA", "PREGUNTA"};
        String[] tableO2 = {"IDENCUESTA", "IDPREGUNTA"};
        Object[] lblsTablas = {Integer.parseInt(lblIdE.getText())};
        int[] dataty = {1};
        try {
            obo.listarObjetoFK(tblPreguntas, pregunta, tableO, tableO2, lblsTablas, dataty);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btnEliminarPreguntaActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarFinal;
    private javax.swing.JButton btnAgregarOpcion;
    private javax.swing.JButton btnAgregarPregunta;
    private javax.swing.JButton btnEditarOpcion;
    private javax.swing.JButton btnEliminarOpcion;
    private javax.swing.JButton btnEliminarPregunta;
    private javax.swing.ButtonGroup btnGroupTipoRespuesta;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRegresarEncuesta;
    private javax.swing.JComboBox<String> cbxTipoSeleccion;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblDescripcionEncuesta;
    private javax.swing.JLabel lblIdE;
    private javax.swing.JLabel lblIdPregunta;
    private javax.swing.JLabel lblNombreEncuesta;
    private javax.swing.JRadioButton rbtnOpcion;
    private javax.swing.JRadioButton rbtnTexto;
    private javax.swing.JTable tblOpciones;
    private javax.swing.JTable tblPreguntas;
    private javax.swing.JTextField txtNombreOpcion;
    private javax.swing.JTextField txtNombrePregunta;
    // End of variables declaration//GEN-END:variables
}
